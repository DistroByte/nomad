global:
  scrape_interval: 10s
  evaluation_interval: 10s
scrape_configs:
- job_name: 'nomad_metrics'
  consul_sd_configs:
  - server: '{{ env "attr.unique.network.ip-address" }}:8500'
    services: ['nomad-client', 'nomad']
  relabel_configs:
  - source_labels: ['__meta_consul_tags']
    regex: '(.*)http(.*)'
    action: keep
  - source_labels: ['__meta_consul_node']
    target_label: 'node'
    # If nomad is available on multiple IPs, drop the ones which are not scrapable
  - source_labels: ['__address__']
    regex: '172(.*)'
    action: drop
  metrics_path: /v1/metrics
  params:
    format: ['prometheus']
    action: keep
  - source_labels: ['__meta_consul_node']
    target_label: 'node'
    # If nomad is available on multiple IPs, drop the ones which are not scrapable
  - source_labels: ['__address__']
    regex: '172(.*)'
    action: drop
  metrics_path: /v1/metrics
  params:
    format: ['prometheus']
- job_name: 'application_metrics'
  consul_sd_configs:
  - server: '{{ env "attr.unique.network.ip-address" }}:8500'
  relabel_configs:
  - source_labels: ['__meta_consul_service']
    regex: 'nomad|nomad-client|consul'
    action: drop
    # Drop services which do not want to be scraped.
    # Typically used when a job does not expose prometheus metrics.
  - source_labels: ['__meta_consul_tags']
    regex: '(.*)prometheus.io/scrape=false(.*)'
    action: 'drop'
  - source_labels: ['__meta_consul_node']
    target_label: 'node'
  - source_labels: ['__meta_consul_service']
    target_label: 'service'
- job_name: 'gitlab_runner'
    static_configs:
    - targets: [ 'hermes.node.consul:9252' ]
      labels:
        service: 'gitlab_runner'
